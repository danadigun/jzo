@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Authorization;
@using jzo.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IAuthorizationService AuthorizationService

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="LogOff" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @{
                if (await AuthorizationService.AuthorizeAsync(User, "CanViewStore"))
                {

                    <li>
                        <a asp-area="" asp-controller="Group" asp-action="Index" class="btn btn-primary" style="color:white">Manage store</a>
                    </li>
                }
            }
            <li>
                <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello, @UserManager.GetUserName(User)!</a>
            </li>
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Sign out</button>
            </li>
            
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li style="padding-top:1em;">
            <span>
                <a style="color:white; text-decoration:none" asp-area="" asp-controller="Account" asp-action="Login">Log in</a>
                 &nbsp;or&nbsp;<a style="color:white; text-decoration:none" asp-area="" asp-controller="Account" asp-action="Register">create an account</a>
            </span>
        </li>

    </ul>
}
